//
//  pds_DiodeFexConfig class methods
//
static PyObject* pds_DiodeFexConfig_get_base    (PyObject*   self, PyObject* args);
static PyObject* pds_DiodeFexConfig_set_base    (PyObject*   self, PyObject* args);
static PyObject* pds_DiodeFexConfig_get_scale   (PyObject*   self, PyObject* args);
static PyObject* pds_DiodeFexConfig_set_scale   (PyObject*   self, PyObject* args);

static PyMethodDef pds_DiodeFexConfig_methods[] = {
  {"get_base"   , (PyCFunction)pds_DiodeFexConfig_get_base   , METH_NOARGS , "Output the base values"},
  {"set_base"   , (PyCFunction)pds_DiodeFexConfig_set_base   , METH_VARARGS, "Input the base values"},
  {"get_scale"  , (PyCFunction)pds_DiodeFexConfig_get_scale  , METH_NOARGS , "Output the scale values"},
  {"set_scale"  , (PyCFunction)pds_DiodeFexConfig_set_scale  , METH_VARARGS, "Input the scale values"},
  {NULL},
};

DefineXtcType(DiodeFexConfig)


#include "pdsdata/lusi/DiodeFexConfigV1.hh"

//
//  Return a list of base values
//
PyObject* pds_DiodeFexConfig_get_base    (PyObject*   self, PyObject* args)
{
  pdsxtc* xtc = (pdsxtc*)self;
  if (xtc->contains.version()==1) {
    const Pds::Lusi::DiodeFexConfigV1* v1 = 
      reinterpret_cast<const Pds::Lusi::DiodeFexConfigV1*>(xtc->payload);
    unsigned n = Pds::Lusi::DiodeFexConfigV1::NRANGES;
    PyObject* o = PyList_New(n);
    for(unsigned i=0; i<n; i++)
      PyList_SetItem(o,i,PyFloat_FromDouble(v1->base[i]));
    return o;
  }

  //  Throw an exception
  return NULL;
}

PyObject* pds_DiodeFexConfig_set_base    (PyObject*   self, PyObject* args)
{
  PyObject* values = 0;
  int sts = PyArg_ParseTuple(args,"O",&values);

  if (sts==0)
    return NULL;

  pdsxtc* xtc = (pdsxtc*)self;
  if (xtc->contains.version()==1) {
    Pds::Lusi::DiodeFexConfigV1* v1 = 
      reinterpret_cast<Pds::Lusi::DiodeFexConfigV1*>(xtc->payload);
    unsigned n = Pds::Lusi::DiodeFexConfigV1::NRANGES;
    for(unsigned i=0; i<n; i++)
      v1->base[i] = PyFloat_AsDouble(PyList_GetItem(values,i));
    return self;
  }

  //  Throw an exception
  return NULL;
}

//
//  Return a list of scale values
//
PyObject* pds_DiodeFexConfig_get_scale   (PyObject*   self, PyObject* args)
{
  pdsxtc* xtc = (pdsxtc*)self;
  if (xtc->contains.version()==1) {
    const Pds::Lusi::DiodeFexConfigV1* v1 = 
      reinterpret_cast<const Pds::Lusi::DiodeFexConfigV1*>(xtc->payload);
    unsigned n = Pds::Lusi::DiodeFexConfigV1::NRANGES;
    PyObject* o = PyList_New(n);
    for(unsigned i=0; i<n; i++)
      PyList_SetItem(o,i,PyFloat_FromDouble(v1->scale[i]));
    return o;
  }
  //  Throw an exception
  return NULL;
}

PyObject* pds_DiodeFexConfig_set_scale   (PyObject*   self, PyObject* args)
{
  PyObject* values = 0;
  int sts = PyArg_ParseTuple(args,"O",&values);

  if (sts==0)
    return NULL;

  pdsxtc* xtc = (pdsxtc*)self;
  if (xtc->contains.version()==1) {
    Pds::Lusi::DiodeFexConfigV1* v1 = 
      reinterpret_cast<Pds::Lusi::DiodeFexConfigV1*>(xtc->payload);
    unsigned n = Pds::Lusi::DiodeFexConfigV1::NRANGES;
    for(unsigned i=0; i<n; i++)
      v1->scale[i] = PyFloat_AsDouble(PyList_GetItem(values,i));
    return self;
  }

  //  Throw an exception
  return NULL;
}
